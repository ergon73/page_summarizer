"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ AI.
"""

import os
from agent import PageSummarizer
from openai_module import OpenAIModule

def test_model_selection():
    """–¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏."""
    print("üß™ –¢–ï–°–¢ –í–´–ë–û–†–ê –ú–û–î–ï–õ–ò")
    print("=" * 40)
    
    # –¢–µ—Å—Ç 1: –ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    print("\n1. –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
    try:
        agent = PageSummarizer()
        print(f"‚úÖ –ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {agent.openai_module.model}")
        assert agent.openai_module.model in ["gpt-4o", "gpt-3.5-turbo"]
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –Ø–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
    print("\n2. –¢–µ—Å—Ç —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –º–æ–¥–µ–ª–∏...")
    try:
        agent = PageSummarizer(model="gpt-3.5-turbo")
        print(f"‚úÖ –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: {agent.openai_module.model}")
        assert agent.openai_module.model == "gpt-3.5-turbo"
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –º–æ–¥–µ–ª—å
    print("\n3. –¢–µ—Å—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π –º–æ–¥–µ–ª–∏...")
    try:
        agent = PageSummarizer(model="invalid-model")
        print("‚ùå –î–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞")
    except ValueError as e:
        print(f"‚úÖ –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π
    print("\n4. –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π...")
    try:
        agent = PageSummarizer()
        supported_models = agent.openai_module.supported_models
        print(f"‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–æ–¥–µ–ª–∏: {supported_models}")
        assert "gpt-4o" in supported_models
        assert "gpt-3.5-turbo" in supported_models
        assert len(supported_models) == 2
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–ï–°–¢ –í–´–ë–û–†–ê –ú–û–î–ï–õ–ò –ó–ê–í–ï–†–®–ï–ù!")

def test_environment_variables():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    print("\nüîß –¢–ï–°–¢ –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è AI_MODEL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
    ai_model = os.getenv("AI_MODEL")
    print(f"AI_MODEL –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {ai_model}")
    
    if ai_model:
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è AI_MODEL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è AI_MODEL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

if __name__ == "__main__":
    test_environment_variables()
    test_model_selection() 